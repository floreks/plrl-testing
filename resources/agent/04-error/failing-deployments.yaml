apiVersion: apps/v1
kind: Deployment
metadata:
  name: failing-deployment
  namespace: testing
  labels:
    app: failing-deployment
    test-scenario: error-handling
    test-type: failing-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: failing-deployment
  template:
    metadata:
      labels:
        app: failing-deployment
        test-scenario: error-handling
    spec:
      containers:
      - name: failing-container
        image: non-existent-image:invalid-tag
        ports:
        - containerPort: 8080
        env:
        - name: FAIL_MODE
          value: "image-pull-error"
        - name: TEST_SCENARIO
          value: "error-handling"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crashloop-deployment
  namespace: testing
  labels:
    app: crashloop-deployment
    test-scenario: error-handling
    test-type: crashloop-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crashloop-deployment
  template:
    metadata:
      labels:
        app: crashloop-deployment
        test-scenario: error-handling
    spec:
      containers:
      - name: crashloop-container
        image: busybox:latest
        command: ["/bin/sh", "-c", "echo 'Starting container...'; sleep 5; echo 'Simulating crash'; exit 1"]
        env:
        - name: FAIL_MODE
          value: "crashloop-backoff"
        - name: TEST_SCENARIO
          value: "error-handling"
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"

